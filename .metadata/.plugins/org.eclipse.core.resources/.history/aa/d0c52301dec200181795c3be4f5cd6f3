package com.capgemini.bankappcheck.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.capgemini.bankappcheck.model.Customer;
import com.capgemini.bankappcheck.repositoryimpl.BankAppRepositoryImpl;
import com.capgemini.bankappcheck.serviceimpl.BankAppServiceImpl;
import com.capgemini.bankappcheck.serviceimpl.CustomerServiceImpl;




@Controller
public class BankAppCheckController {
	
	private BankAppServiceImpl bankAppServiceImpl;
	private CustomerServiceImpl customerServiceImpl;

	@RequestMapping("/")
	public String welcomeHome() {
		return "index";
	}
	
	@RequestMapping(value = "/loginpage", method = RequestMethod.POST)
	public String getloginPage(Model model) {
		model.addAttribute("customer", new Customer());
		return "loginCustomer";
	}
	
		/*@RequestMapping(value = "/addEmployeePage", method = RequestMethod.GET)
		public String getAddEmployeePage(Model model) {
			model.addAttribute("employee", new Employee());
			return "addEmployeeForm";
		}
		
		@RequestMapping(value = "/addEmployee", method = RequestMethod.POST)
		public String addNewEmployee(@ModelAttribute Employee employee) {
			employeeService.addEmployee(employee);
			return "redirect:/findAllEmployees";
		}	*/
		
		
		


	/*@RequestMapping(value="/withdraw/{accountId,amount}",method=RequestMethod.GET)
	public String withdraw(@PathVariable long accountId,double amount)  {
		bankAppServiceImpl.withdraw(accountId, amount);
		return "redirect:/updateBalance";
	}
	
	@RequestMapping(value="/deposit/{accountId,amount}",method=RequestMethod.GET)
	public String deposit(@PathVariable long accountId,double amount) {
		bankAppServiceImpl.deposit(accountId, amount);
		return "redirect:/updateBalance";
	}
	@RequestMapping(value="/fundTransfer{fromAccount,toAccount,amount}",method=RequestMethod.GET)
	public String fundTransfer(@PathVariable long fromAccount, long toAccount, double amount) {
	bankAppServiceImpl.fundTransfer(fromAccount, toAccount, amount);
	return "redirect:/updateBalance";
	}
	
	@RequestMapping(value="/authenticate",method=RequestMethod.POST)
	public String authenticate(@ModelAttribute Customer customer) {
		customerServiceImpl.authenticate(customer);
		return "authenticate";
	}
	
	
	@RequestMapping(value="/updateProfile",method=RequestMethod.POST)
	public String updateProfile(@ModelAttribute Customer customer) {
		customerServiceImpl.updateProfile(customer);
		return "updateProfilepage";
	}
	@RequestMapping(value="/updatePassword{oldPassword,newPassword}",method=RequestMethod.POST)
	public String updatePassword(@PathVariable Customer customer,String oldPassword,String newPassword) {
		customerServiceImpl.updatePassword(customer, oldPassword, newPassword);
		return  "updatePasswordpage";
	}*/
}
 